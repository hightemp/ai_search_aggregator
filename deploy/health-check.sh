#!/bin/bash

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP –æ—Ç–≤–µ—Ç–∞
check_service() {
    local name=$1
    local url=$2
    local expected_code=${3:-200}
    
    echo -n "–ü—Ä–æ–≤–µ—Ä—è–µ–º $name ($url)... "
    
    response=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 --max-time 10 "$url" 2>/dev/null)
    
    if [ "$response" = "$expected_code" ]; then
        echo "‚úÖ OK ($response)"
        return 0
    else
        echo "‚ùå FAIL ($response)"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo ""
check_service "Frontend" "http://localhost:8082" 200
check_service "Backend Health" "http://localhost:9080/healthz" 200
check_service "SearxNG" "http://localhost:8081" 200
check_service "Nginx Proxy" "http://localhost:9081" 200

echo ""
echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ API —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏..."
check_service "API —á–µ—Ä–µ–∑ nginx" "http://localhost:9081/healthz" 200

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ backend..."
echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ backend:"
docker compose -f /home/hightemp/Projects/go_links_seacher/deploy/docker-compose.yml logs --tail=10 backend

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx..."
echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ nginx:"
docker compose -f /home/hightemp/Projects/go_links_seacher/deploy/docker-compose.yml logs --tail=5 proxy